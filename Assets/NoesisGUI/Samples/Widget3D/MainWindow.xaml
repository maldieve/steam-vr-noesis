<Grid
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    TextElement.FontFamily="./#Aero Matics">
    <Grid.Resources>
        <SolidColorBrush x:Key="Brush.OuterBorder" Color="#FF919596"/>
        <SolidColorBrush x:Key="Brush.OuterBorderInset" Color="#FFB0B1B3"/>
        <SolidColorBrush x:Key="Brush.InnerBorder" Color="#FFD4D6D5"/>
        <SolidColorBrush x:Key="Brush.SwitchThumbBg" Color="#FF878586"/>
        <SolidColorBrush x:Key="Brush.PanelBorder" Color="#FFAFAFAF"/>
        <SolidColorBrush x:Key="Brush.PanelBackground" Color="#FFCBCBCB"/>
        <LinearGradientBrush x:Key="Brush.SwitchThumb" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFE5E5E5" Offset="0"/>
            <GradientStop Color="#FFAFAFAF" Offset="0.97"/>
            <GradientStop Color="#00AFAFAF" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Brush.SliderThumb" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFE5E5E5" Offset="0"/>
            <GradientStop Color="#FFAFAFAF" Offset="0.95"/>
            <GradientStop Color="#00AFAFAF" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Brush.DownShadow" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#A5000000" Offset="0.5"/>
            <GradientStop Color="#00000000" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Brush.LeftShadow" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="#CC000000" Offset="0.5"/>
            <GradientStop Color="#00000000"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Brush.RightShadow" StartPoint="1,0" EndPoint="0,0">
            <GradientStop Color="#CC000000" Offset="0.5"/>
            <GradientStop Color="#00000000"/>
        </LinearGradientBrush>
        <RadialGradientBrush x:Key="Brush.InnerShadow">
            <GradientStop Color="#00000000" Offset="0.5"/>
            <GradientStop Color="#33000000" Offset="1"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="Brush.InnerShadowDark">
            <GradientStop Color="#17000000" Offset="0.5"/>
            <GradientStop Color="#33000000" Offset="1"/>
        </RadialGradientBrush>
        <ControlTemplate x:Key="Template.ToggleButton.Switch" TargetType="{x:Type ToggleButton}">
            <Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver">
                                <VisualTransition.GeneratedEasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </VisualTransition.GeneratedEasingFunction>
                            </VisualTransition>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2">
                                <VisualTransition.GeneratedEasingFunction>
                                    <SineEase EasingMode="EaseInOut"/>
                                </VisualTransition.GeneratedEasingFunction>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFFAFAFA"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFBFBFBF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0:0:0.4" To="Checked">
                                <VisualTransition.GeneratedEasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </VisualTransition.GeneratedEasingFunction>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.4" To="1" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="SwitchSpace">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="Checked" GeneratedDuration="0:0:0.5">
                                <VisualTransition.GeneratedEasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </VisualTransition.GeneratedEasingFunction>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="SwitchSpace">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="SwitchSpace">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OffGroup">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                        <VisualState x:Name="Indeterminate"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border CornerRadius="4" BorderThickness="1" BorderBrush="{StaticResource Brush.OuterBorder}" Background="Silver">
                    <Border CornerRadius="3" BorderThickness="1" BorderBrush="{StaticResource Brush.OuterBorderInset}" Padding="6">
                        <Border CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource Brush.InnerBorder}">
                            <Grid>
                                <Grid x:Name="OnGroup">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Border CornerRadius="1" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                    <Border CornerRadius="1" Grid.ColumnSpan="2" Background="{StaticResource Brush.InnerShadow}"/>
                                    <Viewbox>
                                        <TextBlock Text="ON" Margin="2" Foreground="White" Width="24" TextAlignment="Center"/>
                                    </Viewbox>
                                </Grid>
                                <Grid x:Name="OffGroup">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Decorator x:Name="SwitchWidth"/>
                                    <Border CornerRadius="1" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                                    <Border CornerRadius="1" Background="#B2000000" Grid.ColumnSpan="2"/>
                                    <Border CornerRadius="1" Grid.ColumnSpan="2" Background="{StaticResource Brush.InnerShadow}"/>
                                    <Viewbox Grid.Column="1">
                                        <TextBlock Text="OFF" Margin="2" Foreground="#7FFFFFFF" Width="24" TextAlignment="Center"/>
                                    </Viewbox>
                                </Grid>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <Decorator x:Name="SwitchSpace" Width="{Binding ActualWidth, ElementName=SwitchWidth}">
                                        <Decorator.LayoutTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0"/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Decorator.LayoutTransform>
                                    </Decorator>
                                    <Border Width="{Binding ActualWidth, ElementName=SwitchWidth}">
                                        <Grid>
                                            <Border CornerRadius="4" BorderThickness="0,6,0,6"  Margin="-2,0,-2,-8" VerticalAlignment="Bottom"
                                                    BorderBrush="{StaticResource Brush.DownShadow}"/>
                                            <Border CornerRadius="4" BorderThickness="2,0,2,0"  Margin="-4,-4,-4,-3" HorizontalAlignment="Left"
                                                     BorderBrush="{StaticResource Brush.LeftShadow}"/>
                                            <Border CornerRadius="4" BorderThickness="2,0,2,0"  Margin="-4,-4,-4,-3" HorizontalAlignment="Right"
                                                    BorderBrush="{StaticResource Brush.RightShadow}"/>
                                            <Border CornerRadius="2" Margin="-3,-5,-3,-4" Background="{StaticResource Brush.SwitchThumbBg}"/>
                                            <Border x:Name="border" Margin="-3,-5,-3,-4" CornerRadius="2,2,4,4">
                                              <Border.Background>
                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                  <GradientStop Color="#FFE5E5E5" Offset="0"/>
                                                  <GradientStop Color="#FFAFAFAF" Offset="0.97"/>
                                                  <GradientStop Color="#00AFAFAF" Offset="1"/>
                                                </LinearGradientBrush>
                                              </Border.Background>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Border>
                </Border>
            </Grid>
        </ControlTemplate>
        <Style x:Key="Style.ToggleButton.Switch" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#1ea6e4"/>
            <Setter Property="Template" Value="{StaticResource Template.ToggleButton.Switch}"/>
            <Setter Property="ClickMode" Value="Press"/>
        </Style>

        <Style x:Key="Style.Slider.LargeButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Delay" Value="250"/>
            <Setter Property="Interval" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Style.Slider.Thumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFFAFAFA"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFBFBFBF"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border CornerRadius="4" BorderThickness="0,3,0,3" Margin="-2,0,-2,-4" VerticalAlignment="Bottom"
                                    BorderBrush="{StaticResource Brush.DownShadow}"/>
                            <Border CornerRadius="4" BorderThickness="2,0,2,0" Margin="-4,-2,-4,-1" HorizontalAlignment="Left"
                                    BorderBrush="{StaticResource Brush.LeftShadow}"/>
                            <Border CornerRadius="4" BorderThickness="2,0,2,0" Margin="-4,-2,-4,-1" HorizontalAlignment="Right"
                                    BorderBrush="{StaticResource Brush.RightShadow}"/>
                            <Border CornerRadius="2" Margin="-3,-3,-3,-2" Background="{StaticResource Brush.SwitchThumbBg}"/>
                            <Border x:Name="border" Margin="-3,-3,-3,-2" CornerRadius="2,2,4,4">
                              <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                  <GradientStop Color="#FFE5E5E5" Offset="0"/>
                                  <GradientStop Color="#FFAFAFAF" Offset="0.97"/>
                                  <GradientStop Color="#00AFAFAF" Offset="1"/>
                                </LinearGradientBrush>
                              </Border.Background>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Template.Slider" TargetType="{x:Type Slider}">
            <Grid>
                <Border CornerRadius="4" BorderThickness="1" BorderBrush="{StaticResource Brush.OuterBorder}" Background="Silver">
                    <Border CornerRadius="3" BorderThickness="1" BorderBrush="{StaticResource Brush.OuterBorderInset}" Padding="2">
                        <Border CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource Brush.InnerBorder}">
                            <Grid>
                                <Border CornerRadius="1" Background="{TemplateBinding Background}"/>
                                <Border CornerRadius="1" Background="{StaticResource Brush.InnerShadowDark}"/>
                                <Track x:Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource Style.Slider.LargeButton}" Command="Slider.DecreaseLarge"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource Style.Slider.LargeButton}" Command="Slider.IncreaseLarge"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="SliderThumb" Width="10" Style="{StaticResource Style.Slider.Thumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                    </Border>
                </Border>
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type Slider}">
            <Setter Property="Template" Value="{StaticResource Template.Slider}"/>
        </Style>
    </Grid.Resources>
    <Viewbox>
        <Grid Width="400" Height="200">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border Grid.Row="1" Grid.ColumnSpan="2" BorderThickness="0,0,0,8" CornerRadius="4" Margin="2,-2,2,0">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#40000000"/>
                        <GradientStop Offset="1" Color="#00000000"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <Border Grid.ColumnSpan="2" BorderBrush="#FF707F81" Background="Silver" BorderThickness="4,4,4,8" CornerRadius="0.1,0.1,0.0001,0.0001">
                <Grid>
                    <Border BorderThickness="0,0,0,8" VerticalAlignment="Top">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#40000000"/>
                                <GradientStop Offset="1" Color="#00000000"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                    </Border>
                    <Border BorderThickness="4,0,0,0" HorizontalAlignment="Left">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Offset="0" Color="#40000000"/>
                                <GradientStop Offset="1" Color="#00000000"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                    </Border>
                    <Border BorderThickness="4,0,0,0" HorizontalAlignment="Right">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                <GradientStop Offset="0" Color="#40000000"/>
                                <GradientStop Offset="1" Color="#00000000"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                    </Border>
                </Grid>
            </Border>
            <TextBlock Text="Lights Control Panel" HorizontalAlignment="Center" Grid.ColumnSpan="2" Margin="0,10,0,0" FontSize="16" VerticalAlignment="Top" Foreground="#FF324043"/>
            <Border Margin="20,40,10,20" Background="{StaticResource Brush.PanelBackground}" BorderBrush="{StaticResource Brush.PanelBorder}" BorderThickness="1" CornerRadius="2" Padding="5">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Green Light" Foreground="#FF4D4D4D" HorizontalAlignment="Center"/>
                    <ToggleButton Padding="10,5" IsChecked="{Binding GreenLightOn}"
                        Style="{StaticResource Style.ToggleButton.Switch}" Background="#FF0CC736" Margin="30,10,30,0"/>
                    <TextBlock Text="Intensity" Foreground="#FF666666" HorizontalAlignment="Center" Margin="0,10,0,5" FontSize="10"/>
                    <Slider Minimum="0.1" Maximum="2" Value="{Binding GreenLightIntensity, FallbackValue=1}" Background="#CC0CC736" Height="20" Margin="8,0" SmallChange="0.01" LargeChange="0.1"/>
                </StackPanel>
            </Border>
            <Border Margin="10,40,20,20" Background="{StaticResource Brush.PanelBackground}" BorderBrush="{StaticResource Brush.PanelBorder}" BorderThickness="1" CornerRadius="2" Padding="5" Grid.Column="1">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Red Light" Foreground="#FF4D4D4D" HorizontalAlignment="Center"/>
                    <ToggleButton Padding="10,5" IsChecked="{Binding RedLightOn}"
                        Style="{StaticResource Style.ToggleButton.Switch}" Background="#FFFF1D12" Margin="30,10,30,0"/>
                    <TextBlock Text="Intensity" Foreground="#FF666666" HorizontalAlignment="Center" Margin="0,10,0,5" FontSize="10"/>
                    <Slider Minimum="0.1" Maximum="2" Value="{Binding RedLightIntensity, FallbackValue=1}" Background="#CCFF1D12" Height="20" Margin="8,0" SmallChange="0.01" LargeChange="0.1"/>
                </StackPanel>
            </Border>
        </Grid>
    </Viewbox>
</Grid>